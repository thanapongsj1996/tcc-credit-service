name: Push to DockerHub and Update K8s Deployment
run-name: ${{ github.actor }} is deploying this app ðŸš€
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    env:
      NEW_TAG: ${{ github.sha }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/tcc-credit-service

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: latest
          labels: ${{ steps.meta.outputs.labels }}

      # - name: Update K8s Deployment
      #   run: |
      #     echo "commitId: ${{ github.sha }}"
      #     # Generate a new image tag using the environment variable
      #     image_with_new_tag="${{ secrets.DOCKER_USERNAME }}/tcc-credit-service:${{ github.sha }}"

      #     # Update the K8s deployment file using yq
      #     yq eval ".spec.template.spec.containers[0].image |= \"${image_with_new_tag}\"" -i ./manifest/dev/deployment.yaml

      #     # # Commit the changes
      #     git config --local user.email "admin@github.com"
      #     git config --local user.name "GitHub Action"
      #     git checkout main
      #     git add ./manifest/dev/deployment.yaml
      #     git commit -m "Update image to ${image_with_new_tag}"
      #     git push origin main

      # - name: Setup gcloud CLI
      #   uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      #   with:
      #     service_account_key: ${{ secrets.GKE_SA_KEY }}
      #     project_id: ${{ secrets.GKE_PROJECT }}

      # # Configure Docker to use the gcloud command-line tool as a credential
      # # helper for authentication
      # - run: |-
      #     gcloud --quiet auth configure-docker

      # # Get the GKE credentials so we can deploy to the cluster
      # - name: Set up GKE credentials
      #   uses: google-github-actions/get-gke-credentials@v0
      #   with:
      #     cluster_name: tcc-lotto
      #     location: asia-southeast1
      #     project_id: ${{ secrets.GKE_PROJECT }}
      #     credentials: ${{ secrets.GKE_SA_KEY }}

      # - name: Deploy the Docker image to the GKE cluster
      #   run: |
      #     kubectl get ns
      #     kubectl apply -f ./manifest/dev/deployment.yaml

      # - name: Access K8s Cluster
      #   env:
      #     KUBECTL_CONFIG_CONTENT: ${{ secrets.K8S_CONFIG }} #suggest for variable multiple line
      #   run: |
      #     mkdir -p ~/.kube
      #     echo "$KUBECTL_CONFIG_CONTENT" > ~/.kube/config
      #     kubectl config current-context

      # - name: Display yaml file
      #   run: cat ./manifest/dev/deployment.yaml

      # - name: Deploy Image to K8s
      #   run: kubectl apply -f ./manifest/dev/. -n group-3-dev
